{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.1.14562",
        "templateHash": "4078227690523503856"
      }
    },
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The location in which all resources should be deployed."
        }
      },
      "appName": {
        "type": "string",
        "defaultValue": "[concat('jesumefunc', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the function app that you wish to create."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "appInsightsLocation": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for Application Insights"
        }
      },
      "runtime": {
        "type": "string",
        "defaultValue": "dotnet",
        "allowedValues": [
          "node",
          "dotnet"
        ],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      },
      "appServicePlanName": {
        "type": "string",
        "metadata": {
          "description": "The name of the app service plan to create."
        }
      },
      "vnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of the vnet to create."
        }
      },
      "vnetAddressPrefix": {
        "type": "string",
        "metadata": {
          "description": "The vnet address prefix."
        }
      },
      "subnetName": {
        "type": "string",
        "metadata": {
          "description": "The subnet name."
        }
      },
      "subnetAddressPrefix": {
        "type": "string",
        "metadata": {
          "description": "The subnet address prefix."
        }
      }
    },
    "functions": [],
    "variables": {
      "hostingPlanName": "[format('{0}', parameters('appServicePlanName'), uniqueString(subscription().subscriptionId))]",
      "functionAppName": "[parameters('appName')]",
      "applicationInsightsName": "[parameters('appName')]",
      "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
      "functionWorkerRuntime": "[parameters('runtime')]",
      "vnetName": "[format('{0}', parameters('vnetName'))]",
      "vnetAddressPrefix": "[format('{0}', parameters('vnetAddressPrefix'))]",
      "subnetName": "[format('{0}', parameters('subnetName'))]",
      "subnetAddressPrefix": "[format('{0}', parameters('subnetAddressPrefix'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "kind": "Storage"
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-06-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "EP1",
          "tier": "ElasticPremium"
        },
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "computeMode": "Dynamic"
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "[variables('vnetName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vnetAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetAddressPrefix')]",
                "delegations": [
                  {
                    "name": "delegation",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverFarms"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-06-01",
        "name": "[variables('functionAppName')]",
        "location": "[parameters('location')]",
        "kind": "functionapp",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "siteConfig": {
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(variables('functionAppName'))]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~4"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "[variables('functionWorkerRuntime')]"
              },
              {
                  "name": "jesumesbnamespace_SERVICEBUS",
                  "value": "Endpoint=sb://jesumesbnamespace.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=9EWzcpfBSG+CgfTDd0SGp2AuDc50d3mKIgUQWY/vKr0=",
                  "slotSetting": false
              },
              {
                  "name": "dummysetting",
                  "value": "value1",
                  "slotSetting": false
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Web/sites/networkConfig",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}/{1}', parameters('appName'), 'virtualNetwork')]",
        "properties": {
          "subnetResourceId": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))).subnets[0].id]",
          "swiftSupported": true
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
          "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
        ]
      },    
      {
        "type": "microsoft.insights/components",
        "apiVersion": "2020-02-02-preview",
        "name": "[variables('applicationInsightsName')]",
        "location": "[parameters('appInsightsLocation')]",
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
        },
        "properties": {
          "ApplicationId": "[variables('applicationInsightsName')]",
          "Request_Source": "IbizaWebAppExtensionCreate"
        }
      }
    ]
  }
